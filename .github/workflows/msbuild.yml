name: MSBuild

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  Windows:
    runs-on: windows-latest
    env:
      SOLUTION_FILE_PATH: ./platforms/Windows/
      BUILD_CONFIGURATION: Debug
    strategy:
      matrix:
          win-architecture: [x86, x64]
    steps:
    - uses: actions/checkout@v3
      with:
        repository: 'ounols/CSEngine'
        ref: 'feature/windows-x64'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: ${{matrix.win-architecture}}

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{matrix.win-architecture}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Upload EXE
      uses: actions/upload-artifact@v3
      with:
        name: result-windows-${{matrix.win-architecture}}
        path: ./platforms/Windows/${{matrix.win-architecture}}/Debug/*.exe
  Android:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./platforms/Android
    steps:
    - uses: actions/checkout@v3
      with:
        repository: 'ounols/CSEngine'
        ref: 'feature/windows-x64'
        
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - run: chmod +x ./gradlew
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Install NDK
      run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;21.2.6472646"
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: result-android
        path: ./platforms/Android/app/build/outputs/apk/debug
      
  Linux:
    strategy:
      matrix:
          linux-version: [ubuntu-latest, ubuntu-18.04]
          compiler: [gcc, clang]
    runs-on: ${{ matrix.linux-version }}
    
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'ounols/CSEngine'
          ref: 'feature/windows-x64'
          
      - name: Install packages
        run: |
          sudo apt-get -y install cmake build-essential mesa-common-dev libglfw3 libglfw3-dev libglew-dev
          
      - name: Ready for build
        run: |
          export CXXFLAGS="-DBUILD_TEST_MODE"
          mkdir build
        working-directory: ./platforms/Linux
        
      - name: Configure Cmake
        env:
          CC: ${{ matrix.compiler }}
        run: cmake -DCMAKE_BUILD_TYPE=Debug ../
        working-directory: ./platforms/Linux/build
        
      - name: Build
        run: cmake --build .
        working-directory: ./platforms/Linux/build
    
